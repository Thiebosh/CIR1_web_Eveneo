
*****************EXEMPLE UTILISE******************
$format = new intldateformatter('fr_FR', intldateformatter::LONG, intldateformatter::NONE, "Europe/Paris", intldateformatter::GREGORIAN);
    ->mettre la date a la place du none. sinon, prend date actu
$date = new datetime();
$fomat->format($date);
echo $format->format($date);


********************RECHERCHES********************
utilisation de tout dans projet :
extraction de année et mois, calcul du nombre de jour du mois, extraction de jour et events du jour, pour gérer les affichages de l'accueil et de la liste des événements d'une journée {
    SELECT EXTRACT(YEAR FROM datestart); => $_SESSION['year'];
    SELECT EXTRACT(MONTH FROM datestart); => $_SESSION['month'];

    int date('t, gmmktime(0, 0, 0, $_SESSION['month'], 1, $_SESSION['year'])'); => $nbDay; pour l'affichage de l'accueil

    SELECT EXTRACT(DAY FROM datestart); => $requête['day']; => pour l'affichage de la liste des événements d'une journée
    (WHERE) YEAR(datestart) = $_SESSION[year] AND MONTH(datestart) = $_SESSION['month'] AND DAY(datestart) = $day;//compare date de event et date desiree
}

extraction de heure et minute pour gérer les affichages des événements détaillés {
    SELECT TIME(datestart); => $_SESSION['timeBegin'];
    SELECT TIME(dateend); => $_SESSION['timeEnd'];
}

vérification d'un datetime et d'une durée passé par formulaire, ajout d'une durée, et injection d'un datetime, pour gérer l'ajout d'évent {
    function checktime($_POST['hour'], $_POST['min']) {
        if ($hour < 0 || $hour > 23 || !is_numeric($hour)) {
            return false;
        }
        if ($min < 0 || $min > 59 || !is_numeric($min)) {
            return false;
        }
        return true;
    }

    checkdate($_POST['month'], $_POST['day'], $_POST['year']);
    checktime($_POST['hour'], $_POST['min']);
    checktime($_POST['hourEvent']), $_POST['minEvent']);

	//peut enregistrer date dans un autre format
    date('Y-m-d H:i, gmmktime($_POST['hour'], $_POST['min'], 0, $_POST['month'], $_POST['day'], $_POST['year'])'); =>$dateBegin
    date('Y-m-d H:i, gmmktime($_POST['hour'] + $_POST['hourEvent'], $_POST['min'] + $_POST['minEvent'], 0, $_POST['month'], $_POST['day'], $_POST['year'])'); =>$dateEnd

	$dateBegin = date_create_from_format('Y-m-d H:i', dateBegin);//mettre les % dans l'ordre du format de date (si date(d Y m), date_create_from_format('%d %Y %m', date))
	$dateEnd = date_create_from_format('Y-m-d H:i', dateEnd);
    $req = $db->prepare('INSERT INTO tableName(col_date_time) VALUES(:begin, :end)');
    $req->bindValue('begin' => dateBegin, 'end' => dateEnd);
}

affichage d'un datetime, pour gérer l'affichage de l'accueil, de la liste des événements d'une journée, des événements détaillés, et la confirmation d'ajout d'évent {
    //avec jour et mois en alphabétique (français)
    initialisation1 : setlocale(LC_TIME, 'fr_FR');
    initialisation2 : date_default_timezone_set('UTC');
    actuelle : strftime('%A %e %B %Y', strtotime(date('d m Y')));
    variable : strftime('%A %e %B %Y', strtotime(dateBegin));//ou dateEnd ou n'importe quelle autre déjà construite
    variable : strftime('%A %e %B %Y', gmmktime(0, 0, 0, $month, $day, $year));

    ou

    //avec jour et mois en numérique
    $madate = explode('-', $madate); 
    echo $madate[2].'/'.$madate[1].'/'.$madate[0];
}


***************************


détail des fonctions
{
    ***
    string date ( string $format [, int $timestamp = time() ] )
        est en anglais
        si ne précise pas de date, donne l'actuelle
        si échec, retourne false
    -> date_default_timezone_set('UTC'); //initialisation //necessaire?
    -> echo date('l j F Y '); => jour numéroJour, mois, année (valeurs actuelles) ex : Monday 8 August 2005
    -> echo date("d m Y", gmmktime(0, 0, 0, 7, 1, 2000)); => numéroJour, numéroMois, année (valeurs définies par mktime) ici : 01 07 2000
        -> d pour avoir le jour avec 0 initial
        -> j pour avoir le jour sans 0 initial
        -> l pour avoir le jour en version texte
        -> D pour avoir le jour en version texte 3 lettres
        -> N pour avoir le jour de la semaine (1 = lundi, 7 = dimanche)

        -> m pour avoir le mois avec 0 initial
        -> n pour avoir le mois sans 0 initial
        -> F pour avoir le mois en version texte
        -> t pour avoir le nombre de jours dans le mois

        -> Y pour avoir l'année sur 4 chiffres
        -> y pour avoir l'année sur 2 chiffres
        -> L pour savoir si une année est bissextile (1 si oui)

    ***
    int gmmktime ([ int $hour = date("H") [, int $minute = date("i") [, int $second = date("s") [, int $month = date("n") [, int $day = date("j") [, int $year = date("Y")]]]]]] )
        Les arguments peuvent être omis, de droite à gauche, et tous les arguments manquants sont utilisés avec la valeur courante de l'heure et du jour
        si échec, retourne false
    -> $lastmonth = gmmktime(0, 0, 0, date("m")-1, date("d"), date("Y"));
    -> $tomorrow  = gmmktime(0, 0, 0, date("m"), date("d")+1, date("Y"));
    -> $nextyear  = gmmktime(0, 0, 0, date("m"), date("d"), date("Y")+1);

    ***
    bool checkdate ( int $month , int $day , int $year )
        valide une date grégorienne
        les années bissextiles sont prises en compte

    ***
    string setlocale ( int $category , array $locale )
        Modifie les informations de localisation
        LC_TIME pour le format de date et d'heure avec strftime()
        si échec, retourne false
    /* Configure le script en hollandais */
    setlocale(LC_ALL, 'nl_NL');
    /* Affiche : vrijdag 22 december 1978 */
    echo strftime("%A %e %B %Y", gmmktime(0, 0, 0, 12, 22, 1978));

    ***
    string strftime ( string $format [, int $timestamp = time() ] )
        Formate une date/heure locale avec la configuration locale
    -> setlocale(LC_TIME, "fr_FR");
    echo strftime(" in French %A");
    -> echo "12/28/2002 - %V,%G,%Y = " . strftime("%V,%G,%Y", strtotime("12/28/2002")) . "\n";
    // Affiche : 12/28/2002 - %V,%G,%Y = 52,2002,2002
    //%V 	Numéro de la semaine de l'année
    //%G 	L'année, sur 4 chiffres, compatible avec les standards ISO-8601:1988

        -> %d 	Jour avec le 0 initial
        -> %e 	Jour sans le 0 initial
        -> %A 	Nom complet du jour

        -> %m 	Mois avec le 0 initial
        -> %B 	Nom complet du mois, suivant la locale

        -> %y 	L'année, sur 2 chiffres
        -> %Y 	L'année, sur 4 chiffres

    ***
    int strtotime ( string $time [, int $now = time() ] )
        time : Une chaîne date/heure
        si échec, retourne false
    -> echo strtotime("now"), "\n";
    -> echo strtotime("10 September 2000"), "\n";
    -> echo strtotime("+1 day"), "\n";
    -> echo strtotime("+1 week"), "\n";
    -> echo strtotime("+1 week 2 days 4 hours 2 seconds"), "\n";
    -> echo strtotime("next Thursday"), "\n";
    -> echo strtotime("last Monday"), "\n";
}

***************************

exemple d'utilisation pratique
{
    pour vérifier une date : checkdate
        exemple1 : checkdate(12, 31, 2000); (true)
        exemple2 : checkdate(2, 29, 2001); (false)

    pour l'affichage (jour en lettres fr) : strftime
        necessite : setlocale(LC_TIME, 'fr_FR');
        exemple1 : strftime("%A", strtotime("12/28/2002"))
        exemple2 : strftime("%A", strtotime("10 September 2000"))
        exemple3 : strftime("%A", strtotime("now"))
        exemple4 : strftime("%A", strtotime("+1 week 2 days"))
        exemple5 : strftime("%A", strtotime("next Thursday"))
        exemple6 : strftime("%A", strtotime("last Monday"))

    pour gérer les dates : date
        necessite : date_default_timezone_set('UTC');
        exemple1 : date('l j F Y '); jour numéroJour, mois, année -> actu
        exemple2 : date("d m Y", gmmktime(0, 0, 0, 7, 1, 2000));  01 07 2000
        exemple3 : date("d/m/Y", gmmktime(0, 0, 0, 8, 31, 1998));  31/08/1998 -> échapper les '/'? (avec \)
        exemple4 : date("t", gmmktime(0, 0, 0, 8, 1, 2000));  31 (jours)

    pour gérer les intervalles de temps : gmmktime
        exemple1 : gmmktime(0, 0, 0, date("m")+1, date("d"), date("Y")); mois suivant
}

***************************

fonctions MySql {
    SELECT HOUR('15:30:00');=> 15
    SELECT MINUTE('2007-01-05 10:25:30');=> 25
    SELECT SECOND('12:56:43');=> 43
    ->SELECT pseudo FROM membres WHERE HOUR(inscription) = 22;

    TO_DAYS('1997-10-07');=> 729669
    ->SELECT pseudo FROM membres WHERE TO_DAYS(NOW()) - TO_DAYS(inscription) > 100 ;

    SELECT DATEDIFF('2007-01-02', '2007-01-08');=> 6
    SELECT STR_TO_DATE('25/10/2006 14:27:39', '%d/%m/%Y %T');=> 2006-10-25 14:27:39
    SELECT UNIX_TIMESTAMP('1997-10-04 22:23:00');=> 875996580
    SELECT MAKEDATE(2004,365);=> 2004-12-31
    SELECT MAKETIME(14,55,20);=> 14:55:20
    SELECT DATE_ADD('2005-05-15 12:00:00', INTERVAL 5 DAY);=> 2005-05-20 12:00:00
    SELECT DATE_ADD('2000-01-01', INTERVAL 7 YEAR);=> 2007-01-01
    SELECT DATE_ADD('2007-06-15 12:00:00', INTERVAL '2:30:00' HOUR_SECOND);=> 2007-06-15 14:30:00
    SELECT DATE_SUB('2004-01-05', INTERVAL 31 DAY);=> 2003-12-05
    SELECT DATE_SUB('2006-10-01', INTERVAL '6-5' YEAR_MONTH);=> 2000-05-01

    SELECT EXTRACT(MONTH FROM "2017-06-15");
    SELECT EXTRACT(YEAR FROM "2017-06-15");

    SELECT CASE MONTH('1999-07-07')
        WHEN 1 THEN 'janvier'
        WHEN 2 THEN 'février'
        WHEN 3 THEN 'mars'
        WHEN 4 THEN 'avril'
        WHEN 5 THEN 'mai'
        WHEN 6 THEN 'juin'
        WHEN 7 THEN 'juillet'
        WHEN 8 THEN 'août'
        WHEN 9 THEN 'septembre'
        WHEN 10 THEN 'octobre'
        WHEN 11 THEN 'novembre'
        ELSE 'décembre'
    END;
}

***************************

factorisation maximale style procédural
{
    *gestion dates (boutons / requêtes) :
    actuelle : date('d m Y');
    variable : date('d m Y, gmmktime(0, 0, 0, $month, $day, $year)');
    modifier1 : date('d m Y, gmmktime(0, 0, 0, $month + $actionButton, $day, $year)');//positif ou negatif
    modifier2 : date('d m Y, '.strtotime('now +'.$nbMonth;' week'));//verifer
    nbJours/mois : date('t, strtotime($date)');

    *verification date reçue par formulaire
    checkdate($month, $day, $year);

    *affichage date
    $madate = explode('-', $madate); 
    echo $madate[2].'/'.$madate[1].'/'.$madate[0];

    *affichage date complete en français
    initialisation1 : setlocale(LC_TIME, 'fr_FR');
    initialisation2 : date_default_timezone_set('UTC');
    actuelle : strftime('%A %e %B %Y', strtotime(date('d m Y')));
    variable : strftime('%A %e %B %Y', gmmktime(0, 0, 0, $month, $day, $year));

    *enregistrement en bdd (...)
    initialisation : dateInFormat = date('Y-m-d H:i:s, strtotime(date)');
    $req = $db->prepare('INSERT INTO tableName(col_date_time) VALUES(:dt)');
    $req->bindValue('dt',dateInFormat);

    *meilleur enregistrement?
    date_complete datetime NOT NULL DEFAULT '0000-00-00 00:00:00'
    INSERT INTO votre_table (date_complete) VALUES (NOW());

}


***************************
***************************.


gestion date en POO (factorisation plus tard)
{
    *Style orienté objet* {
        try {
            $date = new DateTime("first day of this month");
            $date = new DateTime('14-02-2012 +1 day');
            $date = new DateTime('2006-10-20', new DateTimeZone('Paris/Europe'));
        } catch (Exception $e) {
            echo $e->getMessage();
            exit(1);
        }
        echo $date->format('Y-m-d');//peut utiliser les memes que pour date

        $date->modify('+1 day');
        $date->modify('+1 month');//attention : risque des problèmes sur le jour

        $date->add(new DateInterval('P.$nbJours.D'));
        $date->add(new DateInterval('P.$nbMois.M'));//attention : risque des problèmes sur le jour

        $date->sub(new DateInterval('P.$nbJours.D'));
        $date->sub(new DateInterval('P.$nbMois.M'));//attention : risque des problèmes sur le jour
    }

    *création fuseau horaire*
    $tz = new DateTimeZone('Europe/Paris');

    *utilisation fuseau horaire*
    $date = new DateTime("now", $tz);//le bon fuseau horaire
    $tzLondres = new DateTimeZone('Europe/London');
    $date->setTimezone($tzLondres);//heure modifiée en fonction


    *création d'un intervalle de temps*
    $intervalle = new DateInterval('P1M');//intervalle d'1 mois

    *utilisation d'un intervalle de temps*
    $aujourdhui = new DateTime();
    $evenement  = new DateTime($date_evenement);
    echo $aujourdhui->diff($evenement)->format('Arrivé il y a : %d jours');
    if($aujourdhui->sub($temps_avant_evenement) > $evenement) {     
        echo 'evenement passé !';
    }
    else {
        echo 'Veuillez attendre le début de l'evenement';
    }
    printf("Il reste %s jour %s heures %s minutes %s secondes", $TempsRestant->d, $TempsRestant->h,$TempsRestant->i,$TempsRestant->s);


    *comparaison entre deux dates*
    $date1 = new DateTime("14/02/2012");
    $date2 = new DateTime("12/03/2013");
    if( $date1 < $date2 ){
        echo $date2->format('d/m/Y');
    }
    else if( $date1 === $date2 ){//compare aussi les types
        echo $date2->format('d/m/Y');
    }


    *utilisation format pour enregistrement bdd*
    define('MYSQL_DATETIME_FORMAT','Y-m-d H:i:s');
    try{    // On effectue la connexion si nécessaire
        $db=new PDO('mysql:localhost;db=madb','root','');
        $db->setAttribute(PDO::ATTR_ERR_MODE,PDO::ERR_MODE_EXCEPTION);
        // On crée un DateTime PHP
        $date =new DateTime('14/02/12');
        $req = $db->prepare('INSERT INTO tableName(col_date_time) VALUES(:dt)');
        $req->bindValue('dt',$date->format(MYSQL_DATETIME_FORMAT));
        $req->execute();
    }catch(PDOException $e){
        exit($e->getMessage());
    }


    *conversion internationnale*
    $formatter = new IntlDateFormatter('fr_FR',IntlDateFormatter::LONG,
                    IntlDateFormatter::NONE,
                    'Europe/Paris',
                    IntlDateFormatter::GREGORIAN );
    $date =new DateTime('14-02-2012');
    echo $formatter->format($date);//affiche 14 février 2012
}


***************************


factorisation maximale style orienté objet
{
    *gestion dates (boutons / requêtes)
    actuelle : $date = new DateTime('now', new DateTimeZone('Paris/Europe'));
    variable : $date = new DateTime($year.' '.$month.' '.day, new DateTimeZone('Paris/Europe'));//verifier mise en string
    modifier : $date->modify('+'.$nbMonth.' month');//positif ou negatif (attention : risque des problèmes sur le jour)
    nbJours/mois : echo $date->format('t');

    *verification date reçue par formulaire
    checkdate($month, $day, $year);

    *affichage date complete en français
    $formatter = new IntlDateFormatter('fr_FR',IntlDateFormatter::LONG, IntlDateFormatter::NONE, 'Europe/Paris', IntlDateFormatter::GREGORIAN );
    $formatter->format($date);

    *enregistrement en bdd (...)
    initialisation : define('MYSQL_DATETIME_FORMAT','Y-m-d H:i:s');
    $req = $db->prepare('INSERT INTO tableName(col_date_time) VALUES(:dt)');
    $req->bindValue('dt',$date->format(MYSQL_DATETIME_FORMAT));
}